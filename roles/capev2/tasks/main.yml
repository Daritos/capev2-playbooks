
- name: Set timezone to UTC
  timezone:
    name: UTC

- name: Ensure en_US.UTF-8 exists
  locale_gen:
    name: en_US.UTF-8
    state: present

- name: Set en_US.UTF-8 as default locale
  command: localectl set-locale LANGUAGE=en_US.UTF-8 LANG=en_US.UTF-8

- name: Set en_US.UTF-8 as default locale
  command: update-locale LC_ALL=en_US.UTF-8

###
# Setup Postgresql Database
###

- name: "Setup a database with name {{ cape_db_user }}"
  postgresql_db:
    name: "{{ cape_db_user }}"
    state: present
  become: true
  become_user: postgres

- name: "Create database user {{ cape_db_user }}, and grant access to cape database"
  postgresql_user:
    db: cape
    name: "{{ cape_db_user }}"
    password: "{{ cape_db_password }}"
    priv: "ALL"
    state: present
  become: true
  become_user: postgres

###
# Configure Apparmor
###

- name: Disable apparmor for /usr/sbin/tcpdump
  shell:
    cmd: "aa-disable /usr/sbin/tcpdump"
  ignore_errors: true

- name: Configure Apparmor to allow clamav to scan cape storage
  lineinfile:
    dest: /etc/apparmor.d/local/usr.sbin.clamd
    line: "/opt/CAPEv2/storage/** r,"

###
# Configure System Limits
###

- name: Configure /etc/security/limits.conf
  pam_limits:
    domain: "{{ item.domain }}"
    limit_type: "{{ item.type }}"
    limit_item: "{{ item.item }}"
    value: "{{ item.value }}"
  with_items:
    - domain: "*"
      type: "soft"
      item: "nofile"
      value: "1048576"
    - domain: "*"
      type: "hard"
      item: "nofile"
      value: "1048576"
    - domain: "root"
      type: "soft"
      item: "nofile"
      value: "1048576"
    - domain: "root"
      type: "hard"
      item: "nofile"
      value: "1048576"

- name: Configure /etc/sysctl.conf
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
  with_items:
    - name: "fs.file-max"
      value: "100000"
    - name: "net.ipv6.conf.all.disable_ipv6"
      value: "1"
    - name: "net.ipv6.conf.default.disable_ipv6"
      value: "1"
    - name: "net.ipv6.conf.lo.disable_ipv6"
      value: "1"
#    - name: "net.bridge.bridge-nf-call-ip6tables"
#      value: "0"
#    - name: "net.bridge.bridge-nf-call-iptables"
#      value: "0"
#    - name: "net.bridge.bridge-nf-call-arptables"
#      value: "0"

- name: Configure logrotate
  template:
    src: rotate.conf.j2
    dest: /etc/logrotate.d/rotate.conf

- name: Load logrotate configuration
  shell: 
    cmd: "/usr/sbin/logrotate --force /etc/logrotate.conf"

###
# CAPE
###

- name: Download the latest CAPE source from git
  git:
    repo: https://github.com/kevoreilly/CAPEv2.git
    dest: /opt/CAPEv2
    force: true

- name: Push CAPE configuration
  template:
    src: "conf/{{ item.name }}.j2"
    dest: "/opt/CAPEv2/conf/{{ item.name }}"
  with_items:
    - name: "api.conf"
    - name: "auxiliary.conf"
    - name: "cuckoo.conf"
    - name: "cuckoomx.conf"
    - name: "esx.conf"
    - name: "kvm.conf"
    - name: "kvmremote.conf"
    - name: "malheur.conf"
    - name: "memory.conf"
    - name: "multi.conf"
    - name: "physical.conf"
    - name: "processing.conf"
    - name: "proxmox.conf"
    - name: "reporting.conf"
    - name: "routing.conf"
    - name: "smtp_sinkhole.conf"
    - name: "virtualbox.conf"
    - name: "vmware.conf"
    - name: "vmwareserver.conf"
    - name: "vpn.conf"
    - name: "vsphere.conf"
    - name: "xenserver.conf"

- name: Download CAPE community extensions
  shell:
    cmd: python3 utils/community.py -af
    chdir: /opt/CAPEv2

- name: Set proper ownership of /opt/CAPEv2
  file:
    path: /opt/CAPEv2
    owner: "{{ cape_user }}"
    group: "{{ cape_user }}"
    recurse: true

- name: Tweak DefaultLimitNOFILE in /etc/systemd/user.conf
  lineinfile:
    dest: /etc/systemd/user.conf
    line: "DefaultLimitNOFILE=1048576"
    regexp: "^#?DefaultLimitNOFILE="

- name: Tweak DefaultLimitNOFILE in /etc/systemd/system.conf
  lineinfile:
    dest: /etc/systemd/system.conf
    line: "DefaultLimitNOFILE=1048576"
    regexp: "^#?DefaultLimitNOFILE="

###
# Setup services
###

- name: Setup cape-rooter.service unit file
  template:
    src: cape-rooter.service.j2
    dest: /etc/systemd/system/cape-rooter.service

- name: Restart cape-rooter and enable the service to run on boot
  systemd:
    name: cape-rooter
    state: restarted
    enabled: true
    daemon_reload: true

- name: Setup cape-socksproxies.service unit file
  template:
    src: cape-socksproxies.service.j2
    dest: /etc/systemd/system/cape-socksproxies.service

- name: Restart cape-socksproxies and enable the service to run on boot
  systemd:
    name: cape-socksproxies
    state: restarted
    enabled: true
    daemon_reload: true

- name: Setup cape-smtp-sinkhole.service unit file
  template:
    src: cape-smtp-sinkhole.service.j2
    dest: /etc/systemd/system/cape-smtp-sinkhole.service

- name: Restart cape-smtp-sinkhole and enable the service to run on boot
  systemd:
    name: cape-smtp-sinkhole
    state: restarted
    enabled: true
    daemon_reload: true

- name: Setup cape-socks5man.service unit file
  template:
    src: cape-socks5man.service.j2
    dest: /etc/systemd/system/cape-socks5man.service

- name: Restart cape-socks5man and enable the service to run on boot
  systemd:
    name: cape-socks5man
    state: restarted
    enabled: true
    daemon_reload: true

- name: Deploy cape.service unit file
  template:
    src: cape.service.j2
    dest: /etc/systemd/system/cape.service

- name: Restart cape and enable the service to run on boot
  systemd:
    name: cape
    state: restarted
    enabled: true
    daemon_reload: true

- name: Setup cape-processor.service unit file
  template:
    src: cape-processor.service.j2
    dest: /etc/systemd/system/cape-processor.service

- name: Restart cape-processor and enable the service to run on boot
  systemd:
    name: cape-processor
    state: restarted
    enabled: true
    daemon_reload: true

- name: Setup cape-wsgi.service unit file
  template:
    src: cape-wsgi.service.j2
    dest: /etc/systemd/system/cape-wsgi.service

- name: Restart cape-wsgi and enable the service to run on boot
  systemd:
    name: cape-wsgi
    state: restarted
    enabled: true
    daemon_reload: true